name: Laravel Deploy - ULTRA FAST (No Vendor, No Delete)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do cÃ³digo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      # 3. Instalar dependÃªncias Node.js
      - name: Install Node dependencies
        run: npm ci

      # 4. Build assets
      - name: Build assets
        run: npm run build

      # 5. Criar arquivo de configuraÃ§Ã£o de produÃ§Ã£o
      - name: Create production config
        run: |
          echo "APP_NAME=\"Genios_Infotech\"" > .env.production
          echo "APP_ENV=production" >> .env.production
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env.production
          echo "APP_DEBUG=false" >> .env.production
          echo "APP_URL=${{ secrets.APP_URL }}" >> .env.production
          echo "" >> .env.production
          echo "DB_CONNECTION=mysql" >> .env.production
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env.production
          echo "DB_PORT=3306" >> .env.production
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env.production
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env.production
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env.production
          echo "" >> .env.production
          echo "MAIL_MAILER=smtp" >> .env.production
          echo "MAIL_HOST=${{ secrets.MAIL_HOST }}" >> .env.production
          echo "MAIL_PORT=587" >> .env.production
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env.production
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env.production
          echo "MAIL_ENCRYPTION=tls" >> .env.production
          echo "MAIL_FROM_ADDRESS=${{ secrets.MAIL_FROM_ADDRESS }}" >> .env.production
          echo "MAIL_FROM_NAME=\"Genios Infotech\"" >> .env.production

      # 6. Deploy APENAS arquivos essenciais
      - name: Deploy essential files only
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./
          server-dir: ${{ secrets.FTP_SERVER_DIR }}
          log-level: minimal
          dry-run: false
          dangerous-clean-slate: false
          include: |
            app/**
            bootstrap/**
            config/**
            database/**
            public/**
            resources/**
            routes/**
            storage/**
            artisan
            composer.json
            composer.lock
            .env.production
          exclude: |
            **/.git*
            **/.github*
            **/node_modules/**
            **/tests/**
            **/.env.example
            **/README.md
            **/phpunit.xml
            **/storage/logs/*
            **/storage/framework/cache/*
            **/storage/framework/sessions/*
            **/storage/framework/views/*
            **/vendor/**

      # 7. InstruÃ§Ãµes finais
      - name: Final instructions
        run: |
          echo "âœ… Deploy concluÃ­do!"
          echo "ðŸ“‹ PrÃ³ximos passos:"
          echo "1. Renomeie .env.production para .env no servidor"
          echo "2. Instale vendor: composer install --no-dev"
          echo "3. Execute: php artisan migrate --force"
          echo "4. Configure permissÃµes: chmod -R 755 storage"
          echo ""
          echo "ðŸš€ Tempo total: 2-3 minutos!"

name: Laravel Deploy to Production (SSH Only - SUPER FAST)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do c√≥digo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, mysql, zip, gd, curl, sqlite3, pdo_sqlite
          coverage: none

      # 3. Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      # 4. Instalar depend√™ncias Node.js
      - name: Install Node dependencies
        run: npm ci

      # 5. Build assets
      - name: Build assets
        run: npm run build

      # 6. Criar arquivo de configura√ß√£o de produ√ß√£o
      - name: Create production config
        run: |
          echo "APP_NAME=\"Genios_Infotech\"" > .env.production
          echo "APP_ENV=production" >> .env.production
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env.production
          echo "APP_DEBUG=false" >> .env.production
          echo "APP_URL=${{ secrets.APP_URL }}" >> .env.production
          echo "" >> .env.production
          echo "DB_CONNECTION=mysql" >> .env.production
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env.production
          echo "DB_PORT=3306" >> .env.production
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env.production
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env.production
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env.production
          echo "" >> .env.production
          echo "MAIL_MAILER=smtp" >> .env.production
          echo "MAIL_HOST=${{ secrets.MAIL_HOST }}" >> .env.production
          echo "MAIL_PORT=587" >> .env.production
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env.production
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env.production
          echo "MAIL_ENCRYPTION=tls" >> .env.production
          echo "MAIL_FROM_ADDRESS=${{ secrets.MAIL_FROM_ADDRESS }}" >> .env.production
          echo "MAIL_FROM_NAME=\"Genios Infotech\"" >> .env.production

      # 7. Deploy via SSH (SUPER R√ÅPIDO)
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.SSH_WORK_DIR }}
            echo "üöÄ Iniciando deploy..."
            
            # Backup r√°pido
            if [ -d "backup" ]; then
              rm -rf backup
            fi
            mkdir -p backup
            cp -r app bootstrap config database public resources routes storage artisan composer.json composer.lock .env backup/ 2>/dev/null || true
            
            echo "üì¶ Fazendo backup..."
            
            # Limpar arquivos antigos
            rm -rf app bootstrap config database public resources routes storage artisan composer.json composer.lock .env
            
            echo "üßπ Arquivos antigos removidos..."

      # 8. Upload arquivos via SCP
      - name: Upload files via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "app,bootstrap,config,database,public,resources,routes,storage,artisan,composer.json,composer.lock,.env.production"
          target: ${{ secrets.SSH_WORK_DIR }}
          strip_components: 0

      # 9. Configurar aplica√ß√£o no servidor
      - name: Setup application on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.SSH_WORK_DIR }}
            
            # Renomear arquivo de produ√ß√£o
            mv .env.production .env
            
            echo "üöÄ Instalando depend√™ncias PHP..."
            composer install --no-dev --optimize-autoloader --no-interaction
            
            echo "üîß Configurando Laravel..."
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            
            echo "üóÑÔ∏è Executando migra√ß√µes..."
            php artisan migrate --force
            
            echo "üìÅ Configurando permiss√µes..."
            chmod -R 755 storage
            chmod -R 755 bootstrap/cache
            
            echo "‚úÖ Deploy conclu√≠do com sucesso!"

      # 10. Notifica√ß√£o de sucesso
      - name: Deployment success
        run: echo "‚úÖ Deploy realizado com sucesso em menos de 5 minutos!"

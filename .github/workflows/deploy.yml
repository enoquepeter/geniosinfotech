name: Deploy Laravel + React via FTP

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, zip, gd, mysql, opcache, intl, bcmath
          coverage: none

      # 3. Instalar dependências PHP
      - name: Install PHP Dependencies
        run: |
          composer install --optimize-autoloader --no-dev --no-interaction --no-progress
          # Verifica se vendor/autoload.php foi gerado
          if [ ! -f vendor/autoload.php ]; then
            echo "❌ Erro: vendor/autoload.php não foi gerado. Verifique o composer.json e logs."
            exit 1
          fi
          echo "✅ vendor/autoload.php gerado com sucesso."
          # Verifica se routes contém arquivos
          if [ -z "$(ls -A routes/)" ]; then
            echo "⚠️ Aviso: A pasta routes está vazia. Adicione arquivos como web.php e api.php."
            exit 1
          fi
          echo "✅ Pasta routes contém arquivos."

      # 4. Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      # 5. Instalar dependências Node.js e build do React
      - name: Install Node Dependencies & Build React
        run: |
          npm ci
          npm run build

      # 6. Otimizar Laravel para produção
      - name: Optimize Laravel
        run: |
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          chmod -R 777 storage bootstrap/cache

      # 7. Criar arquivo de configuração de produção
      - name: Create production config
        run: |
          echo "APP_NAME=\"Genios_da_Informatica\"" > .env.production
          echo "APP_ENV=production" >> .env.production
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env.production
          echo "APP_DEBUG=true" >> .env.production  # Temporário para debug
          echo "APP_URL=${{ secrets.APP_URL }}" >> .env.production
          echo "" >> .env.production
          echo "IPAPI_KEY=${{ secrets.IPAPI_KEY }}" >> .env.production
          echo "" >> .env.production
          echo "DB_CONNECTION=mysql" >> .env.production
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env.production
          echo "DB_PORT=3306" >> .env.production
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env.production
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env.production
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env.production
          echo "" >> .env.production
          echo "MAIL_MAILER=smtp" >> .env.production
          echo "MAIL_HOST=${{ secrets.MAIL_HOST }}" >> .env.production
          echo "MAIL_PORT=587" >> .env.production
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env.production
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env.production
          echo "MAIL_ENCRYPTION=tls" >> .env.production
          echo "MAIL_FROM_ADDRESS=${{ secrets.MAIL_FROM_ADDRESS }}" >> .env.production
          echo "MAIL_FROM_NAME=\"CiboShope\"" >> .env.production
          echo "" >> .env.production
          echo "VITE_APP_NAME=\"${APP_NAME}\"" >> .env.production
          

      # 8. Deploy arquivos públicos para o diretório raiz
      - name: Sync Public Files to Server
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./public/
          server-dir: ${{ secrets.FTP_PUBLIC_DIR }}
          log-level: minimal
          dry-run: false
          dangerous-clean-slate: false
          protocol: ftp
          exclude: |
            **/.git*
            **/.github*
            **/node_modules/**
            **/tests/**
            **/.env*

      # 9. Deploy arquivos do Laravel para o diretório abaixo do raiz
      - name: Sync Laravel Files to Server
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./
          server-dir: ${{ secrets.FTP_PRIVATE_DIR }}
          log-level: detailed
          dry-run: false
          dangerous-clean-slate: false
          protocol: ftp
          exclude: |
            **/.git*
            **/.github*
            **/node_modules/**
            **/tests/**
            **/.env.example
            **/README.md
            **/phpunit.xml
            **/public/**
            **/.htaccess
            **/storage/logs/*
            **/storage/framework/cache/*
            **/storage/framework/sessions/*
            **/storage/framework/views/*

      # 10. Instruções finais
      - name: Final Instructions
        run: |
          echo "Deploy concluído!"
          echo "Próximos passos (no servidor via painel de controle ou FTP):"
          echo "1. Renomeiear .env.production para .env no diretório raiz do Laravel."
          echo "2. Importar o banco de dados localmente."
          echo "3. Configurar permissões via FTP: 755 para pastas, 644 para arquivos, 777 para storage/ e bootstrap/cache/."